name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run tests
      run: dotnet test --no-build --configuration Release --verbosity normal
      continue-on-error: true

    # - name: Publish artifacts (Windows only)
    #   if: matrix.os == 'windows-latest'
    #   run: |
    #     dotnet publish ReplaceText/ReplaceText.csproj -c Release -r win-x64 --self-contained -o ./publish/win-x64
    #     dotnet publish ReplaceText/ReplaceText.csproj -c Release -r linux-x64 --self-contained -o ./publish/linux-x64
    #     dotnet publish ReplaceText/ReplaceText.csproj -c Release -r osx-x64 --self-contained -o ./publish/osx-x64

    # - name: Upload build artifacts (Windows only)
    #   if: matrix.os == 'windows-latest'
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: ReplaceText-Binaries
    #     path: ./publish/
    #     retention-days: 30

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Check code formatting
      run: dotnet format --verify-no-changes --verbosity diagnostic

    - name: Build with warnings as errors
      run: dotnet build --no-restore --configuration Release /p:TreatWarningsAsErrors=true

  format:
    name: Format Code
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Format code
      run: dotnet format

    - name: Check for changes
      id: git-check
      run: |
        git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT

    - name: Commit formatted code
      if: steps.git-check.outputs.changes == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -A
        git commit -m "style: apply code formatting [skip ci]"
        git push
